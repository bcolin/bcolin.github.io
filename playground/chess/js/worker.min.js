// @preserve Author: Benoit Colin - @license BY-NC 4.0
var bchessworker={turnCount:-1,compute:function(e,t,r){this.turnCount=t,this.maxRecurLevel=r&&r.maxRecurLevel||2;for(var y=[],o=0,s=this.minSkipScore=0;s<8;s++)for(var i=0;i<8;i++){var a=e[s][i];if("empty"!=a.type&&!a.white){var p={x:s,y:i,type:a.type,white:a.white},h=this.getPieceMoves(p,e);console.log(JSON.stringify(p)+" : "+h.length+" moves");for(var x=0;x<h.length;x++){var n=h[x],v=JSON.parse(JSON.stringify(e));this.applyMove(v,p,n);this.evaluate(v,!1,p);n.score=this.evaluateRecursive(v,!1,0,p),console.log(" evaluated move : "+JSON.stringify(n)),n.piece=p,y.push(n)}}o+=1/64,self.postMessage({command:"progress",progress:o})}var u=-9999999999,c=[];for(x=0;x<y.length;x++){(f=y[x]).score>u&&(u=f.score)}for(x=0;x<y.length;x++){var f;(f=y[x]).score==u&&c.push(f)}var m=c[Math.floor(Math.random()*c.length)];self.postMessage({command:"result",bestMove:m})},evaluateRecursive:function(e,t,r,y){if(r>=this.maxRecurLevel)return this.evaluate(e,t,y);for(var o=[],s=0;s<8;s++)for(var i=0;i<8;i++){var a=e[s][i];if("empty"!=a.type&&a.white!=t)for(var p={x:s,y:i,type:a.type,white:a.white},h=this.getPieceMoves(p,e),x=0;x<h.length;x++){var n=h[x],v=JSON.parse(JSON.stringify(e));this.applyMove(v,p,n);var u=this.evaluateRecursive(v,!t,r+1,p);o.push({move:n,score:u})}}if(0==o.length)return console.log("mat ou pat!"),99999999;var c=-99999999;for(x=0;x<o.length;x++){var f=o[x];f.score>c&&(c=f.score)}return 99999999-c},evaluate:function(e,t,r){var y=0,o=null;t||(o=this.getKingPiece(e,!t));for(var s=0;s<8;s++)for(var i=0;i<8;i++){var a=e[s][i];a.x=s,a.y=i,"empty"!=a.type&&(y+=this.getPieceScore(a,t,o))}return this.testCheck(e,!t)&&(y+=50),y},getPieceScore:function(e,t,r){var y=0;if(e.white==t){if("pion"==e.type?y+=1e4:"cheval"==e.type?(y+=25e3,1.5):"fou"==e.type?(y+=25e3,1.5):"tour"==e.type?(y+=3e4,2):"dame"==e.type?(y+=4e4,3):"roi"==e.type&&(y+=18e4,0),!t){y+=50,e.y<2&&(y-=5);var o=0;"pion"==e.type&&(this.turnCount<=8&&(3!=e.x&&4!=e.x||(o=3<e.y?12:3==e.y?10:0)),this.turnCount<=16&&"pion"==e.type&&(0==e.x||7==e.x)&&1<e.y&&(o=-20)),y+=o,y+=.08*(15-(Math.abs(r.x-e.x)+Math.abs(r.y-e.y)))}}else"pion"==e.type?y-=1e4:"cheval"==e.type?y-=25e3:"fou"==e.type?y-=25e3:"tour"==e.type?y-=3e4:"dame"==e.type?y-=4e4:"roi"==e.type&&(y-=18e4);return y},applyMove:function(e,t,r){var y=t.x,o=t.y,s=e[r.x][r.y];s.type=t.type,s.white=t.white,s.x=r.x,s.y=r.y,e[y][o]={type:"empty"}},getPieceMoves:function(e,t,r){var y=[];if("pion"==e.type&&e.white&&0<e.y){"empty"==t[e.x][e.y-1].type&&(y.push({x:e.x,y:e.y-1}),6==e.y&&"empty"==t[e.x][e.y-2].type&&y.push({x:e.x,y:e.y-2}));var o=t[e.x-1][e.y-1];0<e.x&&o&&"empty"!=o.type&&!o.white&&y.push({x:e.x-1,y:e.y-1});o=t[e.x+1][e.y-1];e.x<7&&o&&"empty"!=o.type&&!o.white&&y.push({x:e.x+1,y:e.y-1})}else if("pion"==e.type&&!e.white&&e.y<7){"empty"==t[e.x][e.y+1].type&&(y.push({x:e.x,y:e.y+1}),1==e.y&&"empty"==t[e.x][e.y+2].type&&y.push({x:e.x,y:e.y+2}));o=t[e.x-1][e.y+1];0<e.x&&o&&"empty"!=o.type&&o.white&&y.push({x:e.x-1,y:e.y+1});o=t[e.x+1][e.y+1];e.x<7&&o&&"empty"!=o.type&&o.white&&y.push({x:e.x+1,y:e.y+1})}else if("cheval"==e.type)y.push({x:e.x+1,y:e.y-2}),y.push({x:e.x+2,y:e.y-1}),y.push({x:e.x+1,y:e.y+2}),y.push({x:e.x+2,y:e.y+1}),y.push({x:e.x-1,y:e.y-2}),y.push({x:e.x-2,y:e.y-1}),y.push({x:e.x-1,y:e.y+2}),y.push({x:e.x-2,y:e.y+1});else if("tour"==e.type)y=(y=(y=(y=y.concat(this.getMovesForDir(e,{x:1,y:0},t))).concat(this.getMovesForDir(e,{x:-1,y:0},t))).concat(this.getMovesForDir(e,{x:0,y:1},t))).concat(this.getMovesForDir(e,{x:0,y:-1},t));else if("fou"==e.type)y=(y=(y=(y=y.concat(this.getMovesForDir(e,{x:1,y:1},t))).concat(this.getMovesForDir(e,{x:-1,y:1},t))).concat(this.getMovesForDir(e,{x:-1,y:-1},t))).concat(this.getMovesForDir(e,{x:1,y:-1},t));else if("dame"==e.type)y=(y=(y=(y=(y=(y=(y=(y=y.concat(this.getMovesForDir(e,{x:1,y:0},t))).concat(this.getMovesForDir(e,{x:-1,y:0},t))).concat(this.getMovesForDir(e,{x:0,y:1},t))).concat(this.getMovesForDir(e,{x:0,y:-1},t))).concat(this.getMovesForDir(e,{x:1,y:1},t))).concat(this.getMovesForDir(e,{x:-1,y:1},t))).concat(this.getMovesForDir(e,{x:-1,y:-1},t))).concat(this.getMovesForDir(e,{x:1,y:-1},t));else if("roi"==e.type){if(y.push({x:e.x+1,y:e.y}),y.push({x:e.x-1,y:e.y}),y.push({x:e.x,y:e.y+1}),y.push({x:e.x,y:e.y-1}),y.push({x:e.x+1,y:e.y+1}),y.push({x:e.x-1,y:e.y+1}),y.push({x:e.x+1,y:e.y-1}),y.push({x:e.x-1,y:e.y-1}),e.white&&4==e.x&&7==e.y)if("empty"==t[e.x+1][e.y].type&&"empty"==t[e.x+2][e.y].type)"tour"==(s=t[e.x+3][e.y]).type&&s.white&&y.push({x:e.x+2,y:e.y});else if("empty"==t[e.x-1][e.y].type&&"empty"==t[e.x-2][e.y].type&&"empty"==t[e.x-3][e.y].type){var s;"tour"==(s=t[0][7]).type&&s.white&&y.push({x:e.x-2,y:e.y})}}for(var i=[],a=0;a<y.length;a++){var p=y[a];if(this.isInBoard(p.x,p.y)){var h=t[p.x][p.y];if("empty"==h.type||e.white!=h.white)if(r)i.push(p);else{var x=JSON.parse(JSON.stringify(t));this.applyMove(x,e,p),this.testCheck(x,e.white)||i.push(p)}}}return i},testCheck:function(e,t){var r=this.getKingPiece(e,t);if(r){for(var y=0;y<8;y++)for(var o=0;o<8;o++){var s=e[y][o];if("empty"!=s.type&&s.white!=t){s.x=y,s.y=o;for(var i=this.getPieceMoves(s,e,!0),a=0;a<i.length;a++){var p=i[a];if(p.x==r.x&&p.y==r.y)return!0}}}return!1}return!0},getKingPiece:function(e,t){for(var r=0;r<8;r++)for(var y=0;y<8;y++){var o=e[r][y];if(o.x=r,o.y=y,"roi"==o.type&&o.white==t)return o}},getMovesForDir:function(e,t,r){for(var y=[],o=e.x,s=e.y,i=0;i<8;i++){if(o+=t.x,s+=t.y,!this.isInBoard(o,s))return y;var a=r[o][s];if("empty"!=a.type)return a.white!=e.white&&y.push({x:o,y:s}),y;y.push({x:o,y:s})}return y},isInBoard:function(e,t){return 0<=e&&e<8&&0<=t&&t<8}};self.addEventListener("message",function(e){var t=e.data;if("compute"==t.command)self.postMessage({command:"progress",progress:0}),bchessworker.compute(t.board,t.turnCount,null);else if("canmove"==t.command){var r=t.board[t.from.x][t.from.y];r.x=t.from.x,r.y=t.from.y;for(var y=bchessworker.getPieceMoves(r,t.board,!1),o=0;o<y.length;o++){var s=y[o];if(s.x==t.to.x&&s.y==t.to.y)return void self.postMessage({command:"canmoveresult",value:!0,from:t.from,to:t.to})}self.postMessage({command:"canmoveresult",value:!1})}else if("iswhitemat"==t.command){for(var i=0;i<8;i++)for(var a=0;a<8;a++){var p=t.board[i][a];if("empty"!=p.type&&p.white)if(p.x=i,p.y=a,0<(y=bchessworker.getPieceMoves(p,t.board,!1)).length)return void self.postMessage({command:"iswhitematresult",value:!1})}self.postMessage({command:"iswhitematresult",value:!0})}});